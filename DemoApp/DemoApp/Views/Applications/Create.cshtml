@model DemoApp.Data.DTO.IPOApplicationDTO
@{
    ViewData["Title"] = "Create";
}


<div class="card shadow-lg mt-4">
    <div class="card-header">
        <h1 class="text-center text-muted">Apply New IPO</h1>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col justify-content-center">
                @if (@TempData["AlertMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["AlertMessage"]
                    </div>
                }
                <form asp-action="Create" asp-controller="Applications" method="post">
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label class="col-form-label col-4">Name of the Company/Fund</label>
                        <select asp-for="InstrumentId" id="Instrument" class="form-select col-2 shadow-sm bg-light " required asp-items="@ViewBag.Instrument">
                            <option>---Select Company/Fund---</option>
                        </select>
                    </div>
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label asp-for="Facevalue" class="col-form-label col-4">Face Value (BDT)</label>
                        <input type="text" readonly id="Facevalue" asp-for="Facevalue" class="form-control col-4" />
                    </div>
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label asp-for="Premium" class="col-form-label col-4">Premium (BDT)</label>
                        <input type="text" readonly id="Premium" asp-for="Premium" class="form-control col-4" />
                    </div>
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label asp-for="IpoRate" class="col-form-label col-4">Offer Price per share (BDT)</label>
                        <input type="text" readonly id="IpoRate" asp-for="IpoRate" class="form-control col-4" />
                    </div>
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label asp-for="totalAmount" class="col-form-label col-4">Total Application Amount (BDT)</label>
                        <input type="text" readonly id="minimumAmount" asp-for="totalAmount" class="form-control col-4" />
                    </div>
                    <div class="d-flex justify-content-between col-8 mb-1">
                        <label asp-for="totalAmountinword" class="col-form-label col-4">Total Amount (in word)</label>
                        <input type="text" readonly asp-for="totalAmountinword" id="ammountInword" class="form-control col-4" />
                    </div>
                    <div class="col-2 mb-1 mt-2">
                        <button class="w-100 btn btn-info btn-lg text-white shadow-sm">Apply</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-end">
        <a class="btn btn-link " href="@Url.Action("Index","Applications")">
            <i class="fa fa-arrow-left" aria-hidden="true"></i> Back To List
        </a>
    </div>
</div>



@section Scripts{
    <script>
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                this.remove();
            })
        }, 4000);
        function numberToWords(number) {
            var digit = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];
            var elevenSeries = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
            var countingByTens = ['Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];
            var shortScale = ['', 'Thousand', 'Million', 'Billion', 'Trillion'];

            number = number.toString(); number = number.replace(/[\, ]/g, ''); if (number != parseFloat(number)) return 'not a number'; var x = number.indexOf('.'); if (x == -1) x = number.length; if (x > 15) return 'too big'; var n = number.split(''); var str = ''; var sk = 0; for (var i = 0; i < x; i++) { if ((x - i) % 3 == 2) { if (n[i] == '1') { str += elevenSeries[Number(n[i + 1])] + ' '; i++; sk = 1; } else if (n[i] != 0) { str += countingByTens[n[i] - 2] + ' '; sk = 1; } } else if (n[i] != 0) { str += digit[n[i]] + ' '; if ((x - i) % 3 == 0) str += 'hundred '; sk = 1; } if ((x - i) % 3 == 1) { if (sk) str += shortScale[(x - i - 1) / 3] + ' '; sk = 0; } } if (x != number.length) { var y = number.length; str += 'point '; for (var i = x + 1; i < y; i++) str += digit[n[i]] + ' '; } str = str.replace(/\number+/g, ' '); return str.trim() + "";

        }

        $(document).on("change", "#Instrument", function () {

            var instrumentId = $(this).val();
            $.ajax({
                type: "GET",
                url: '/Applications/GetInstrumentDetails/' + instrumentId,
                data: { instrumentId: instrumentId },
                dataType: "json",
                success: data => {
                    $('#Facevalue').val(data.facevalue.toFixed(2));
                    $('#Premium').val(data.premium.toFixed(2));
                    $('#IpoRate').val(data.iporate.toFixed(2));
                    $('#minimumAmount').val(data.minimumAmount.toFixed(2));
                    $('#ammountInword').val(numberToWords(data.minimumAmount) + " Taka Only");
                }
            });
        });

    </script>

}







